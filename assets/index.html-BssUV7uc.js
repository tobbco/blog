import{_ as e,c as i,a,o as t}from"./app-DLwuheDP.js";const d={};function l(n,s){return t(),i("div",null,s[0]||(s[0]=[a(`<p>SSH (Secure Shell) 是一种加密的网络协议，用于在网络上进行安全通信。 传统的 SSH 登录方式依赖于密码，存在安全风险，容易受到暴力破解攻击。 使用 SSH 密钥登录是一种更安全、更便捷的替代方案，本文将详细介绍如何在 Linux 服务器上配置 SSH 密钥登录。</p><h2 id="一、-客户端密钥对生成" tabindex="-1"><a class="header-anchor" href="#一、-客户端密钥对生成"><span>一、 客户端密钥对生成</span></a></h2><p>首先，在本地客户端生成一对 RSA 密钥，这包括一个私钥 (id_rsa) 和一个公钥 (id_rsa.pub)。 私钥必须保密，公钥则可以安全地分发给服务器。</p><p>使用以下命令生成密钥对</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh-keygen</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -t</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rsa</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -b</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 4096</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -C</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">your_email@example.com</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>-t rsa</code>: 指定密钥类型为 RSA。</li><li><code>-b 4096</code>: 指定密钥长度为 4096 位，密钥长度越长，安全性越高。</li><li><code>-C &quot;your_email@example.com&quot;</code>: 添加注释，建议使用你的邮箱地址。</li></ul><p>命令执行后，系统会提示你输入密钥文件保存路径（建议使用默认路径）和密码（建议设置一个强密码，但为了本文演示无密码登录，这里选择空密码，一路回车即可）。 这会在 <code>~/.ssh</code> 目录下生成三个文件：</p><ul><li><code>id_rsa</code>: 私钥文件，绝对不能泄露。</li><li><code>id_rsa.pub</code>: 公钥文件，需要复制到服务器。</li><li><code>known_hosts</code>: 已知主机密钥文件，用于验证服务器身份。 使用以下命令查看公钥内容并复制：</li></ul><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cat</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/.ssh/id_rsa.pub</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="二、-服务端配置" tabindex="-1"><a class="header-anchor" href="#二、-服务端配置"><span>二、 服务端配置</span></a></h2><p>接下来，将客户端生成的公钥添加到服务器的 <code>authorized_keys</code> 文件中。</p><h3 id="创建-ssh-目录" tabindex="-1"><a class="header-anchor" href="#创建-ssh-目录"><span><strong>创建 <code>.ssh</code> 目录</strong></span></a></h3><p>如果服务器上不存在 <code>.ssh</code> 目录，则需要创建，已存在跳过此步。</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mkdir</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /root/.ssh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="创建-authorized-keys-文件" tabindex="-1"><a class="header-anchor" href="#创建-authorized-keys-文件"><span>创建 <code>authorized_keys</code> 文件</span></a></h3><p>在 <code>.ssh</code> 目录下创建 <code>authorized_keys</code> 文件，已存在跳过此步。</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">touch</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/.ssh/authorized_keys</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="添加公钥" tabindex="-1"><a class="header-anchor" href="#添加公钥"><span>添加公钥</span></a></h3><p>将客户端复制的公钥内容粘贴到 <code>authorized_keys</code> 文件中。 可以使用 <code>vim</code> 或其他文本编辑器进行编辑。 <strong>注意：</strong> 公钥内容应该直接粘贴，不要添加任何其他字符。</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">vim</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /root/.ssh/authorized_keys</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="设置权限" tabindex="-1"><a class="header-anchor" href="#设置权限"><span>设置权限</span></a></h3><p>为了安全起见，需要设置 <code>.ssh</code> 目录和 <code>authorized_keys</code> 文件的权限</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">chmod</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 700</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /root/.ssh</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">chmod</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 600</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /root/.ssh/authorized_keys</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、-修改-ssh-配置文件" tabindex="-1"><a class="header-anchor" href="#三、-修改-ssh-配置文件"><span>三、 修改 SSH 配置文件</span></a></h2><p>修改 SSH 服务器配置文件 <code>/etc/ssh/sshd_config</code>，启用基于密钥的认证并禁用密码认证：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">vi</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/ssh/sshd_config</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>找到以下几行，并进行如下修改：</p><ul><li><code>PasswordAuthentication no</code>: 禁用密码认证。</li><li><code>PermitRootLogin yes</code>: 允许 root 用户使用密钥登录 (<strong>谨慎使用，建议为普通用户创建密钥，并使用 <code>sudo</code> 命令执行管理员操作</strong>)。</li><li><code>AuthorizedKeysFile .ssh/authorized_keys</code>: 指定公钥文件路径。</li><li><code>PubkeyAuthentication yes</code>: 启用公钥认证。</li><li><code>ClientAliveInterval 60</code>: 每 60 秒发送一个 keep-alive 消息到客户端。</li><li><code>ClientAliveCountMax 3</code>: 如果连续 3 次 keep-alive 消息没有收到回应，则关闭连接。</li></ul><h2 id="四、-重启-ssh-服务并测试" tabindex="-1"><a class="header-anchor" href="#四、-重启-ssh-服务并测试"><span>四、 重启 SSH 服务并测试</span></a></h2><p>保存 <code>/etc/ssh/sshd_config</code> 文件后，重启 SSH 服务：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">systemctl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> restart</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> sshd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>现在，你可以使用以下命令尝试无密码登录服务器</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> root@ip</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果配置正确，你将可以直接登录服务器，无需输入密码。</p><p><strong>安全注意事项:</strong></p><ul><li><strong>私钥安全:</strong> 妥善保管你的私钥文件 <code>id_rsa</code>，不要将其上传到任何公共服务器或与他人共享。</li><li><strong>权限设置:</strong> 正确设置 <code>.ssh</code> 目录和 <code>authorized_keys</code> 文件的权限至关重要，这可以防止未授权访问。</li><li><strong>限制 root 登录:</strong> 为了提高安全性，建议不要直接允许 root 用户使用密钥登录，而是创建一个普通用户，并使用 <code>sudo</code> 命令执行管理员操作。</li><li><strong>定期更新密钥:</strong> 定期生成新的密钥对，并更新服务器上的公钥，可以进一步增强安全性。</li></ul><p>通过以上步骤，你可以安全地配置 SSH 密钥登录，提高服务器的安全性并简化登录流程。 记住，安全始终是第一位的，请谨慎操作并定期检查你的服务器安全配置。</p><h2 id="五、ssh命令" tabindex="-1"><a class="header-anchor" href="#五、ssh命令"><span>五、SSH命令</span></a></h2><h3 id="_1-基本连接命令" tabindex="-1"><a class="header-anchor" href="#_1-基本连接命令"><span>1. 基本连接命令</span></a></h3><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> username@hostname</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>username</code>: 远程服务器上的用户名。</li><li><code>hostname</code>: 远程服务器的主机名或IP地址。</li></ul><p>例如：<code>ssh john.doe@example.com</code> 或 <code>ssh user1@192.168.1.100</code></p><h3 id="_2-指定端口的连接命令" tabindex="-1"><a class="header-anchor" href="#_2-指定端口的连接命令"><span>2. 指定端口的连接命令</span></a></h3><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -p</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> port</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> username@hostname</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>-p port</code>: 指定 SSH 连接使用的端口号，默认端口为 22。 例如：<code>ssh -p 2222 user@server.example.com</code> (使用 2222 端口连接)</li></ul><h3 id="_3-使用密钥进行连接的命令" tabindex="-1"><a class="header-anchor" href="#_3-使用密钥进行连接的命令"><span>3. 使用密钥进行连接的命令</span></a></h3><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -i</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /path/to/your/private_key</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> username@hostname</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>-i /path/to/your/private_key</code>: 指定用于身份验证的私钥文件的路径。</li></ul><p>例如：<code>ssh -i ~/.ssh/id_rsa user@server.example.com</code></p><h3 id="_4-跳板机连接命令" tabindex="-1"><a class="header-anchor" href="#_4-跳板机连接命令"><span>4. 跳板机连接命令</span></a></h3><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -J</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> jump_host_username@jump_host_address</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> username@target_hostname</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>-J jump_host_username@jump_host_address</code>: 指定跳板机（中间服务器）的用户名和地址。</li><li><code>username@target_hostname</code>: 指定目标服务器的用户名和地址。</li></ul><p>例如：<code>ssh -J gateway_user@gateway.example.com user@server.example.com</code> (通过 gateway.example.com 连接到 server.example.com)<br> 例如： <code>ssh -J gateway_user@gateway.example.com user@server.example.com</code> （通过 gateway.example.com 连接到 server.example.com）</p><h3 id="_5-执行远程命令" tabindex="-1"><a class="header-anchor" href="#_5-执行远程命令"><span>5. 执行远程命令</span></a></h3><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> username@hostname</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">command</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>&quot;command&quot;</code>: 在远程服务器上执行的命令，需要用双引号括起来，以防止本地 shell 解释特殊字符。 例如：<code>ssh user@server.example.com &quot;ls -l /home&quot;</code></li></ul><h3 id="_6-将本地端口转发到远程服务器" tabindex="-1"><a class="header-anchor" href="#_6-将本地端口转发到远程服务器"><span>6. 将本地端口转发到远程服务器</span></a></h3><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -L</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> local_port:remote_host:remote_port</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> username@hostname</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>-L local_port:remote_host:remote_port</code>: 将本地 <code>local_port</code> 转发到远程服务器 <code>remote_host</code> 的 <code>remote_port</code>。</li></ul><p>例如：<code>ssh -L 8080:localhost:8080 user@server.example.com</code> (将本地 8080 端口转发到远程服务器的 8080 端口)</p><h3 id="_7-将远程端口转发到本地服务器" tabindex="-1"><a class="header-anchor" href="#_7-将远程端口转发到本地服务器"><span>7. 将远程端口转发到本地服务器</span></a></h3><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -R</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> local_port:remote_host:remote_port</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> username@hostname</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>-R local_port:remote_host:remote_port</code>: 将远程服务器 <code>remote_host</code> 的 <code>remote_port</code> 转发到本地 <code>local_port</code>。 例如：<code>ssh -R 8080:localhost:8080 user@server.example.com</code> (将远程服务器的 8080 端口转发到本地的 8080 端口)</li></ul>`,63)]))}const o=e(d,[["render",l],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/article/n2jahb2j/","title":"Linux服务器SSH密钥认证配置最佳实践","lang":"zh-CN","frontmatter":{"title":"Linux服务器SSH密钥认证配置最佳实践","createTime":"2025/01/18 16:01:34","permalink":"/article/n2jahb2j/","tags":["SSH","服务器"]},"headers":[],"readingTime":{"minutes":4.72,"words":1417},"git":{"updatedTime":1737193342000,"contributors":[{"name":"xianchaoye","username":"xianchaoye","email":"18201082822@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/xianchaoye?v=4","url":"https://github.com/xianchaoye"}]},"filePathRelative":"linux/Linux服务器SSH密钥认证配置最佳实践.md","categoryList":[{"id":"e206a5","sort":10005,"name":"linux"}],"bulletin":false}');export{o as comp,r as data};
