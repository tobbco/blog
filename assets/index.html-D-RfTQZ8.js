import{_ as e,c as a,a as i,o as t}from"./app-DLwuheDP.js";const n={};function d(o,s){return t(),a("div",null,s[0]||(s[0]=[i(`<h2 id="给用户组分配目录权限" tabindex="-1"><a class="header-anchor" href="#给用户组分配目录权限"><span>给用户组分配目录权限</span></a></h2><p>要让 <code>test</code> 组下的成员对目录 <code>/usr/java</code> 具有读、写、可执行权限，可以通过以下步骤实现：</p><h3 id="_1-更改目录的组归属" tabindex="-1"><a class="header-anchor" href="#_1-更改目录的组归属"><span>1. <strong>更改目录的组归属</strong></span></a></h3><p>首先，将目录 <code>/usr/java</code> 的组更改为 <code>test</code>，这样 <code>test</code> 组的成员可以对该目录进行操作。</p><p>使用 <code>chown</code> 命令：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> chown</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :test</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /usr/java</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这将把 <code>/usr/java</code> 目录的组归属更改为 <code>test</code>，但不会更改目录的所有者。</p><h3 id="_2-设置目录权限" tabindex="-1"><a class="header-anchor" href="#_2-设置目录权限"><span>2. <strong>设置目录权限</strong></span></a></h3><p>使用 <code>chmod</code> 命令，为 <code>test</code> 组分配读、写、执行权限。目录的执行权限允许进入目录，而写权限允许在目录内创建文件。</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> chmod</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 770</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /usr/java</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>解释：</p><ul><li><code>7</code> 对应所有者权限（读、写、执行）。</li><li><code>7</code> 对应组权限（读、写、执行）。</li><li><code>0</code> 对应其他用户权限（无权限）。</li></ul><p>这样一来，目录的所有者和 <code>test</code> 组的成员将拥有完全的权限（读、写、执行），而其他用户将没有任何权限。</p><h3 id="_3-递归应用权限-如果有子目录和文件" tabindex="-1"><a class="header-anchor" href="#_3-递归应用权限-如果有子目录和文件"><span>3. <strong>递归应用权限（如果有子目录和文件）</strong></span></a></h3><p>如果 <code>/usr/java</code> 目录下已经存在子目录和文件，并且希望 <code>test</code> 组的成员对它们也具有相同的权限，可以递归地设置权限。</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> chmod</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -R</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 770</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /usr/java</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> chown</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -R</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :test</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /usr/java</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这将递归地更改目录及其所有子文件和子目录的组归属为 <code>test</code>，并设置读、写、执行权限。</p><h3 id="_4-确保新创建的文件也继承组权限" tabindex="-1"><a class="header-anchor" href="#_4-确保新创建的文件也继承组权限"><span>4. <strong>确保新创建的文件也继承组权限</strong></span></a></h3><p>为了确保 <code>test</code> 组的成员在 <code>/usr/java</code> 目录内新创建的文件自动继承组权限，您可以设置目录的 SGID (Set Group ID) 位。</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> chmod</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> g+s</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /usr/java</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这样，任何在该目录中创建的文件或目录都将自动继承 <code>test</code> 组，而不必手动更改其组归属。</p><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><ul><li><strong>更改组归属</strong>：<code>sudo chown :test /usr/java</code></li><li><strong>设置权限</strong>：<code>sudo chmod 770 /usr/java</code></li><li><strong>递归应用权限</strong>（如果有子目录和文件）：<code>sudo chmod -R 770 /usr/java</code> 和 <code>sudo chown -R :test /usr/java</code></li><li><strong>设置 SGID</strong>（使新创建的文件和目录继承组）：<code>sudo chmod g+s /usr/java</code></li></ul><p>这样，<code>test</code> 组下的所有成员将对 <code>/usr/java</code> 目录及其内容具有读、写和执行权限。</p>`,24)]))}const h=e(n,[["render",d],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/article/a241mt55/","title":"Linux目录权限","lang":"zh-CN","frontmatter":{"title":"Linux目录权限","createTime":"2023/01/16 15:14:45","permalink":"/article/a241mt55/","tags":["linux"]},"headers":[],"readingTime":{"minutes":1.86,"words":558},"git":{"updatedTime":1737193342000,"contributors":[{"name":"xianchaoye","username":"xianchaoye","email":"18201082822@163.com","commits":2,"avatar":"https://avatars.githubusercontent.com/xianchaoye?v=4","url":"https://github.com/xianchaoye"}]},"filePathRelative":"linux/Linux目录权限.md","categoryList":[{"id":"e206a5","sort":10005,"name":"linux"}],"bulletin":false}');export{h as comp,c as data};
