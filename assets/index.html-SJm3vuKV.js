import{_ as i,c as a,a as r,o as s}from"./app-DLwuheDP.js";const t={};function n(o,e){return s(),a("div",null,e[0]||(e[0]=[r('<p>Portainer 是一款轻量级、易于使用的开源容器管理用户界面 (UI)，它能够简化 Docker、Kubernetes 和其他容器编排平台的管理。 无论您是容器化应用的新手还是经验丰富的专家，Portainer 都能帮助您更有效地管理容器环境。</p><h3 id="一、portainer-的优势" tabindex="-1"><a class="header-anchor" href="#一、portainer-的优势"><span>一、Portainer 的优势</span></a></h3><p>Portainer 的主要优势在于其易用性和强大的功能：</p><ul><li><strong>用户友好的界面:</strong> Portainer 提供了一个直观的 Web UI，即使没有深入的容器知识，也能轻松上手。 您可以通过图形界面管理容器、镜像、网络、卷等资源，而无需记忆复杂的命令行指令。</li><li><strong>多平台支持:</strong> Portainer 支持多种容器环境，包括 Docker、Docker Swarm、Kubernetes、Azure ACI 和更多。 这意味着您可以使用同一个界面管理不同的容器平台。</li><li><strong>集中管理:</strong> Portainer 可以连接到多个 Docker 主机或 Kubernetes 集群，实现集中管理，简化了多环境的管理复杂性。</li><li><strong>安全访问控制:</strong> Portainer 支持基于角色的访问控制 (RBAC)，您可以为不同的用户或团队分配不同的权限，确保环境安全。</li><li><strong>快速部署:</strong> Portainer 本身就是一个容器，部署非常简单快捷，几分钟内即可完成安装和配置。</li><li><strong>开源免费:</strong> Portainer 社区版 (CE) 是完全开源免费的，您可以自由地使用和定制。 此外，还提供商业版 (BE) 提供更多高级功能和支持。</li></ul><h3 id="二、portainer-的安装和部署" tabindex="-1"><a class="header-anchor" href="#二、portainer-的安装和部署"><span>二、Portainer 的安装和部署</span></a></h3><p>Portainer 的安装非常简单，通常只需要运行一个容器即可。 以下是一个使用 Docker 部署 Portainer 的示例：</p><p>创建一个名为 <code>portainer_data</code> 的数据卷，用于存储 Portainer 的数据。</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> volume</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> portainer_data</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>以守护进程模式运行 Portainer 容器</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -d</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -p</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 8000:8000</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -p</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 9000:9000</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -v</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /var/run/docker.sock:/var/run/docker.sock</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -v</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> portainer_data:/data</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> portainer/portainer-ce</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>-d：以守护进程模式运行 -p：端口映射，宿主机端口:容器端口 -v：挂载卷 <code>-v /var/run/docker.sock:/var/run/docker.sock</code> 将 Docker socket 挂载到容器中，允许 Portainer 访问 Docker daemon。 <code>-v portainer_data:/data</code> 将数据卷挂载到容器中，用于持久化 Portainer 的数据。</p></blockquote><p>部署完成后访问<a href="http://81.70.99.108:9000/#!/init/admin" target="_blank" rel="noopener noreferrer">Portainer</a>进行初始化，设置用户名和密码。</p><h3 id="三、portainer-的主要功能" tabindex="-1"><a class="header-anchor" href="#三、portainer-的主要功能"><span>三、Portainer 的主要功能</span></a></h3><p>Portainer 提供了丰富的功能，包括：</p><ul><li><strong>容器管理:</strong> 创建、启动、停止、重启、删除容器；查看容器日志和状态；管理容器资源。</li><li><strong>镜像管理:</strong> 查看、搜索、拉取、推送镜像；管理镜像仓库。</li><li><strong>网络管理:</strong> 查看和管理 Docker 网络。</li><li><strong>卷管理:</strong> 查看和管理 Docker 卷。</li><li><strong>事件日志:</strong> 查看容器事件日志。</li><li><strong>用户管理:</strong> 管理用户和权限。</li><li><strong>Kubernetes 集成:</strong> 管理 Kubernetes 集群、命名空间、Pod、Deployment 等资源 (需要安装 Kubernetes 插件)。</li></ul><h3 id="四、总结" tabindex="-1"><a class="header-anchor" href="#四、总结"><span>四、总结</span></a></h3><p>Portainer 是一款优秀的容器管理工具，它简化了容器的管理和监控，提高了工作效率。 其易用性和多平台支持使其成为管理容器环境的理想选择。 虽然存在一些局限性，但其优势远大于不足，值得推荐给所有容器化应用的使用者。 建议根据实际需求选择社区版或商业版</p>',17)]))}const d=i(t,[["render",n],["__file","index.html.vue"]]),p=JSON.parse('{"path":"/article/mm85ti1v/","title":"Portainer：简化容器管理的利器","lang":"zh-CN","frontmatter":{"title":"Portainer：简化容器管理的利器","createTime":"2023/10/16 16:02:42","permalink":"/article/mm85ti1v/","tags":["Docker","Portainer","容器"]},"headers":[],"readingTime":{"minutes":2.82,"words":845},"git":{"updatedTime":1737015927000,"contributors":[{"name":"xianchaoye","username":"xianchaoye","email":"18201082822@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/xianchaoye?v=4","url":"https://github.com/xianchaoye"}]},"filePathRelative":"docker/Portainer：简化容器管理的利器.md","categoryList":[{"id":"05b605","sort":10008,"name":"docker"}],"bulletin":false}');export{d as comp,p as data};
